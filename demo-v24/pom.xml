<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>superfields-parent</artifactId>
        <groupId>pl.unforgiven</groupId>
        <version>0.7.77-SNAPSHOT</version>
    </parent>

    <artifactId>superfields-demo-v24</artifactId>
    <version>0.7.77-SNAPSHOT</version>
    <name>V24+ demo app for SuperFields</name>
    <description>Showcase application for V24+ and SuperFields.</description>
    <packaging>${packaging.type}</packaging>

    <properties>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <jetty.plugin.version>11.0.13</jetty.plugin.version>
        <packaging.type>war</packaging.type>
        <maven.compiler.release>17</maven.compiler.release>
    </properties>

    <dependencies>
        <dependency>
            <groupId>pl.unforgiven</groupId>
            <artifactId>superfields</artifactId>
            <version>0.7.77-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Added to provide logging output as Flow uses -->
        <!-- the unbound SLF4J no-operation (NOP) logger implementation -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.32</version>
        </dependency>
        <dependency>
            <groupId>org.atteo.classindex</groupId>
            <artifactId>classindex</artifactId>
            <version>3.13</version>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <!-- Replace artifactId with vaadin-core to use only free components -->
            <artifactId>vaadin</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
    </dependencies>

    <repositories>
        <!-- Main Maven repository -->
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <!-- Repository used by many Vaadin add-ons: https://vaadin.com/directory -->
        <repository>
            <id>Vaadin Directory</id>
            <url>https://maven.vaadin.com/vaadin-addons</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <defaultGoal>jetty:run</defaultGoal>
        <plugins>
            <!-- We use jetty plugin, replace it with your favourite developing servlet container -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.plugin.version}</version>
                <configuration>
                    <systemProperties>
                        <vaadin.frontend.hotdeploy>true</vaadin.frontend.hotdeploy>
                    </systemProperties>
                </configuration>
            </plugin>

            <!--
                Take care of synchronizing java dependencies and imports in
                package.json and main.js files.
                It also creates webpack.config.js if not exists yet.
            -->
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-frontend</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- Production mode is activated using -Pproduction -->
            <id>production</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <version>${vaadin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build-frontend</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <optimizeBundle>false</optimizeBundle>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- profile for deploying to demo.unforgiven.pl -->
            <id>deploy-demo</id>
            <build>
                <finalName>superfields</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                        <version>1.10.6</version>
                        <configuration>
                            <container>
                                <containerId>tomcat10x</containerId>
                                <type>remote</type>
                            </container>
                            <configuration>
                                <type>runtime</type>
                                <properties>
                                    <cargo.server.settings>demo-deployment</cargo.server.settings>
                                </properties>
                            </configuration>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>quarkus</id>
            <properties>
                <quarkus.version>3.6.7</quarkus.version>
                <packaging.type>jar</packaging.type>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <!-- Quarkus Platform BOM to keep the project
                         artifacts in sync with the quarkus.version -->
                    <dependency>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-bom</artifactId>
                        <version>${quarkus.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                    <!-- Vaadin Platform BOM -->
                    <dependency>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-bom</artifactId>
                        <type>pom</type>
                        <scope>import</scope>
                        <version>${vaadin.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>vaadin-quarkus-extension</artifactId>
                    <version>${vaadin.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jboss.slf4j</groupId>
                    <artifactId>slf4j-jboss-logmanager</artifactId>
                    <version>1.1.0.Final</version>
                </dependency>
                <dependency>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-core-deployment</artifactId>
                    <version>${quarkus.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!-- For in-depth information on quarkus-maven-plugin
                         see https://quarkus.io/guides/maven-tooling#build-tool-maven -->
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-maven-plugin</artifactId>
                        <version>${quarkus.version}</version>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <goals>
                                    <!-- Builds the Quarkus application -->
                                    <goal>build</goal>
                                    <!-- in these goals the Quarkus application bootstrap
                                         is initialized and re-used in the build goal -->
                                    <goal>generate-code</goal>
                                    <goal>generate-code-tests</goal>
                                </goals>
                            </execution>
                        </executions>
                     </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
