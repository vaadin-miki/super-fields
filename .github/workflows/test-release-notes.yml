name: TEST Release branch on milestone close

on:
  push:
    branches: [131-conflict-resolving]

jobs:
  make-branch:
    runs-on: ubuntu-latest
    steps:
      - id: version
        run: |
          set -x
          echo "::set-output name=version::0.7.0"
      - name: Push milestone notes branch
        uses: UnforgivenPL/push-branch@v2
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
          source: 131-conflict-resolving
          target: notes-${{ steps.version.outputs.version }}
      - uses: actions/checkout@v2
        with:
          ref: notes-${{ steps.version.outputs.version }}
      - name: Create milestone notes
        uses: UnforgivenPL/milestone-notes@v1
        with:
          match-milestone: "^${{ steps.version.outputs.version }} "
          repository: ${{ github.repository }}
          labels: "enhancement, api, bug"
      - name: Format milestone notes
        run: |
          sed -i -e "s/## enhancement/## New features and enhancements/g" milestone-notes.md
          sed -i -e "s/## api/## Changes to API/g" milestone-notes.md
          sed -i -e "s/## bug/## Bug fixes/g" milestone-notes.md
          sed -i -e "s/^$/(nothing reported)/g" milestone-notes.md
      - name: Update release notes
        run: |
          echo -e "\n" | cat milestone-notes.md - superfields/release-notes.md > superfields/release-notes.md.new
          mv superfields/release-notes.md.new superfields/release-notes.md
      - name: Remove milestone notes
        run: rm milestone-notes.md
      - name: Push changes to notes branch
        uses: stefanzweifel/git-auto-commit-action@v4.1.6
        with:
          commit_message: "(bot) release notes updated for ${{ steps.version.outputs.version }}"
          branch: notes-${{ steps.version.outputs.version }}
      - name: Prepare merge and push it to development
        run: |
          set -x
          git fetch
          git checkout notes-${{ steps.version.outputs.version }}
          git checkout 131-conflict-resolving
          git config user.email "${{ secrets.EMAIL }}"
          git config user.name "Miki (bot)"
          git merge notes-${{ steps.version.outputs.version }}
          git push origin
          git push -d origin notes-${{ steps.version.outputs.version }}
