name: Version and Release Notes

on: create

jobs:
  prepare:
    if: ${{ (github.event.ref_type == 'branch') && startsWith(github.event.ref, 'release-') }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.what-version.version }}
    steps:
      - id: what-version
        run: |
          set -x
          export VERSION="`echo ${{ github.event.ref }} | sed -e s/release-//g`"
          echo "::set-output name=version::$VERSION"

  set-version:
    if: ${{ (github.event.ref_type == 'branch') && startsWith(github.event.ref, 'release-') }}
    runs-on: ubuntu-latest
    needs: prepare
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 10
        uses: actions/setup-java@v1
        with:
          java-version: 10
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Set version and update readme
        run: |
          set -x
          echo ${{ needs.prepare.outputs.version }}
          echo ${{ needs.prepare.steps.what-version.outputs.version }}
          export VERSION="${{ needs.prepare.outputs.version }}"
          mvn versions:set -DnewVersion=$VERSION --file pom.xml
          mvn versions:set -DnewVersion=$VERSION --file superfields/pom.xml
          sed -i -e s/{VERSION}/$VERSION/g ./README.md
      - name: Create milestone notes
        uses: UnforgivenPL/milestone-notes@v1
        with:
          match-milestone: ^${{ needs.prepare.outputs.version }}
          repository: ${{ github.repository }}
          labels: "enhancement, api, bug"
      - name: Format milestone notes
        run: |
          sed -i -e "s/## enhancement/## New features and enhancements/g" milestone-notes.md
          sed -i -e "s/## api/## Changes to API/g" milestone-notes.md
          sed -i -e "s/## bug/## Bug fixes/g" milestone-notes.md
          sed -i -e "s/^$/(nothing reported)/g" milestone-notes.md
      - name: Update release notes
        run: |
          cat milestone-notes.md superfields/release-notes.md > superfields/release-notes.md.new
          mv superfields/release-notes.md.new superfields/release-notes.md
      - name: Remove milestone notes
        run: rm milestone-notes.md
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4.1.6
        with:
          commit_message: "(bot) release notes for version ${{ needs.prepare.output.version }}"
          branch: ${{ github.event.ref }}
